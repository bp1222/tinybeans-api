/*
Tinybeans API - Unofficial

Reverse Engineered API for Tinybeans.  This is horribly incomplete, and not supported

API version: 0.1.1
Contact: dave@mudsite.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tinybeans

import (
	"encoding/json"
)

// User struct for User
type User struct {
	URL *string `json:"URL,omitempty"`
	Avatars *Avatars `json:"avatars,omitempty"`
	DateStyle *DateStyle `json:"dateStyle,omitempty"`
	Deleted *bool `json:"deleted,omitempty"`
	EmailAddress *string `json:"emailAddress,omitempty"`
	EmailFrequencyOnNewComment *EmailFrequency `json:"emailFrequencyOnNewComment,omitempty"`
	EmailFrequencyOnNewEmotion *EmailFrequency `json:"emailFrequencyOnNewEmotion,omitempty"`
	EmailMarketingOptOut *bool `json:"emailMarketingOptOut,omitempty"`
	EmailOptOut *bool `json:"emailOptOut,omitempty"`
	EmailWeeklySummary *bool `json:"emailWeeklySummary,omitempty"`
	ExternalProviderRef *string `json:"externalProviderRef,omitempty"`
	FacebookId *string `json:"facebookId,omitempty"`
	FirstLoggedInTimestamp *int64 `json:"firstLoggedInTimestamp,omitempty"`
	FirstName *string `json:"firstName,omitempty"`
	FullName *string `json:"fullName,omitempty"`
	HasMemoriesAccess *bool `json:"hasMemoriesAccess,omitempty"`
	Id *int64 `json:"id,omitempty"`
	InstagramId *string `json:"instagramId,omitempty"`
	InstagramUsername *string `json:"instagramUsername,omitempty"`
	LastEmailOpenTimestamp *int64 `json:"lastEmailOpenTimestamp,omitempty"`
	LastLoggedInTimestamp *int64 `json:"lastLoggedInTimestamp,omitempty"`
	LastName *string `json:"lastName,omitempty"`
	LastUpdatedTimestamp *int64 `json:"lastUpdatedTimestamp,omitempty"`
	MeasurementSystem *MeasurementSystem `json:"measurementSystem,omitempty"`
	PublicUsername *string `json:"publicUsername,omitempty"`
	ReferralCode *string `json:"referralCode,omitempty"`
	ReferralUrl *string `json:"referralUrl,omitempty"`
	TimeZone *TimeZone `json:"timeZone,omitempty"`
	TimeZoneOffset *int64 `json:"timeZoneOffset,omitempty"`
	Timestamp *int64 `json:"timestamp,omitempty"`
	Username *string `json:"username,omitempty"`
}

// NewUser instantiates a new User object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUser() *User {
	this := User{}
	return &this
}

// NewUserWithDefaults instantiates a new User object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserWithDefaults() *User {
	this := User{}
	return &this
}

// GetURL returns the URL field value if set, zero value otherwise.
func (o *User) GetURL() string {
	if o == nil || isNil(o.URL) {
		var ret string
		return ret
	}
	return *o.URL
}

// GetURLOk returns a tuple with the URL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *User) GetURLOk() (*string, bool) {
	if o == nil || isNil(o.URL) {
    return nil, false
	}
	return o.URL, true
}

// HasURL returns a boolean if a field has been set.
func (o *User) HasURL() bool {
	if o != nil && !isNil(o.URL) {
		return true
	}

	return false
}

// SetURL gets a reference to the given string and assigns it to the URL field.
func (o *User) SetURL(v string) {
	o.URL = &v
}

// GetAvatars returns the Avatars field value if set, zero value otherwise.
func (o *User) GetAvatars() Avatars {
	if o == nil || isNil(o.Avatars) {
		var ret Avatars
		return ret
	}
	return *o.Avatars
}

// GetAvatarsOk returns a tuple with the Avatars field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *User) GetAvatarsOk() (*Avatars, bool) {
	if o == nil || isNil(o.Avatars) {
    return nil, false
	}
	return o.Avatars, true
}

// HasAvatars returns a boolean if a field has been set.
func (o *User) HasAvatars() bool {
	if o != nil && !isNil(o.Avatars) {
		return true
	}

	return false
}

// SetAvatars gets a reference to the given Avatars and assigns it to the Avatars field.
func (o *User) SetAvatars(v Avatars) {
	o.Avatars = &v
}

// GetDateStyle returns the DateStyle field value if set, zero value otherwise.
func (o *User) GetDateStyle() DateStyle {
	if o == nil || isNil(o.DateStyle) {
		var ret DateStyle
		return ret
	}
	return *o.DateStyle
}

// GetDateStyleOk returns a tuple with the DateStyle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *User) GetDateStyleOk() (*DateStyle, bool) {
	if o == nil || isNil(o.DateStyle) {
    return nil, false
	}
	return o.DateStyle, true
}

// HasDateStyle returns a boolean if a field has been set.
func (o *User) HasDateStyle() bool {
	if o != nil && !isNil(o.DateStyle) {
		return true
	}

	return false
}

// SetDateStyle gets a reference to the given DateStyle and assigns it to the DateStyle field.
func (o *User) SetDateStyle(v DateStyle) {
	o.DateStyle = &v
}

// GetDeleted returns the Deleted field value if set, zero value otherwise.
func (o *User) GetDeleted() bool {
	if o == nil || isNil(o.Deleted) {
		var ret bool
		return ret
	}
	return *o.Deleted
}

// GetDeletedOk returns a tuple with the Deleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *User) GetDeletedOk() (*bool, bool) {
	if o == nil || isNil(o.Deleted) {
    return nil, false
	}
	return o.Deleted, true
}

// HasDeleted returns a boolean if a field has been set.
func (o *User) HasDeleted() bool {
	if o != nil && !isNil(o.Deleted) {
		return true
	}

	return false
}

// SetDeleted gets a reference to the given bool and assigns it to the Deleted field.
func (o *User) SetDeleted(v bool) {
	o.Deleted = &v
}

// GetEmailAddress returns the EmailAddress field value if set, zero value otherwise.
func (o *User) GetEmailAddress() string {
	if o == nil || isNil(o.EmailAddress) {
		var ret string
		return ret
	}
	return *o.EmailAddress
}

// GetEmailAddressOk returns a tuple with the EmailAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *User) GetEmailAddressOk() (*string, bool) {
	if o == nil || isNil(o.EmailAddress) {
    return nil, false
	}
	return o.EmailAddress, true
}

// HasEmailAddress returns a boolean if a field has been set.
func (o *User) HasEmailAddress() bool {
	if o != nil && !isNil(o.EmailAddress) {
		return true
	}

	return false
}

// SetEmailAddress gets a reference to the given string and assigns it to the EmailAddress field.
func (o *User) SetEmailAddress(v string) {
	o.EmailAddress = &v
}

// GetEmailFrequencyOnNewComment returns the EmailFrequencyOnNewComment field value if set, zero value otherwise.
func (o *User) GetEmailFrequencyOnNewComment() EmailFrequency {
	if o == nil || isNil(o.EmailFrequencyOnNewComment) {
		var ret EmailFrequency
		return ret
	}
	return *o.EmailFrequencyOnNewComment
}

// GetEmailFrequencyOnNewCommentOk returns a tuple with the EmailFrequencyOnNewComment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *User) GetEmailFrequencyOnNewCommentOk() (*EmailFrequency, bool) {
	if o == nil || isNil(o.EmailFrequencyOnNewComment) {
    return nil, false
	}
	return o.EmailFrequencyOnNewComment, true
}

// HasEmailFrequencyOnNewComment returns a boolean if a field has been set.
func (o *User) HasEmailFrequencyOnNewComment() bool {
	if o != nil && !isNil(o.EmailFrequencyOnNewComment) {
		return true
	}

	return false
}

// SetEmailFrequencyOnNewComment gets a reference to the given EmailFrequency and assigns it to the EmailFrequencyOnNewComment field.
func (o *User) SetEmailFrequencyOnNewComment(v EmailFrequency) {
	o.EmailFrequencyOnNewComment = &v
}

// GetEmailFrequencyOnNewEmotion returns the EmailFrequencyOnNewEmotion field value if set, zero value otherwise.
func (o *User) GetEmailFrequencyOnNewEmotion() EmailFrequency {
	if o == nil || isNil(o.EmailFrequencyOnNewEmotion) {
		var ret EmailFrequency
		return ret
	}
	return *o.EmailFrequencyOnNewEmotion
}

// GetEmailFrequencyOnNewEmotionOk returns a tuple with the EmailFrequencyOnNewEmotion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *User) GetEmailFrequencyOnNewEmotionOk() (*EmailFrequency, bool) {
	if o == nil || isNil(o.EmailFrequencyOnNewEmotion) {
    return nil, false
	}
	return o.EmailFrequencyOnNewEmotion, true
}

// HasEmailFrequencyOnNewEmotion returns a boolean if a field has been set.
func (o *User) HasEmailFrequencyOnNewEmotion() bool {
	if o != nil && !isNil(o.EmailFrequencyOnNewEmotion) {
		return true
	}

	return false
}

// SetEmailFrequencyOnNewEmotion gets a reference to the given EmailFrequency and assigns it to the EmailFrequencyOnNewEmotion field.
func (o *User) SetEmailFrequencyOnNewEmotion(v EmailFrequency) {
	o.EmailFrequencyOnNewEmotion = &v
}

// GetEmailMarketingOptOut returns the EmailMarketingOptOut field value if set, zero value otherwise.
func (o *User) GetEmailMarketingOptOut() bool {
	if o == nil || isNil(o.EmailMarketingOptOut) {
		var ret bool
		return ret
	}
	return *o.EmailMarketingOptOut
}

// GetEmailMarketingOptOutOk returns a tuple with the EmailMarketingOptOut field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *User) GetEmailMarketingOptOutOk() (*bool, bool) {
	if o == nil || isNil(o.EmailMarketingOptOut) {
    return nil, false
	}
	return o.EmailMarketingOptOut, true
}

// HasEmailMarketingOptOut returns a boolean if a field has been set.
func (o *User) HasEmailMarketingOptOut() bool {
	if o != nil && !isNil(o.EmailMarketingOptOut) {
		return true
	}

	return false
}

// SetEmailMarketingOptOut gets a reference to the given bool and assigns it to the EmailMarketingOptOut field.
func (o *User) SetEmailMarketingOptOut(v bool) {
	o.EmailMarketingOptOut = &v
}

// GetEmailOptOut returns the EmailOptOut field value if set, zero value otherwise.
func (o *User) GetEmailOptOut() bool {
	if o == nil || isNil(o.EmailOptOut) {
		var ret bool
		return ret
	}
	return *o.EmailOptOut
}

// GetEmailOptOutOk returns a tuple with the EmailOptOut field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *User) GetEmailOptOutOk() (*bool, bool) {
	if o == nil || isNil(o.EmailOptOut) {
    return nil, false
	}
	return o.EmailOptOut, true
}

// HasEmailOptOut returns a boolean if a field has been set.
func (o *User) HasEmailOptOut() bool {
	if o != nil && !isNil(o.EmailOptOut) {
		return true
	}

	return false
}

// SetEmailOptOut gets a reference to the given bool and assigns it to the EmailOptOut field.
func (o *User) SetEmailOptOut(v bool) {
	o.EmailOptOut = &v
}

// GetEmailWeeklySummary returns the EmailWeeklySummary field value if set, zero value otherwise.
func (o *User) GetEmailWeeklySummary() bool {
	if o == nil || isNil(o.EmailWeeklySummary) {
		var ret bool
		return ret
	}
	return *o.EmailWeeklySummary
}

// GetEmailWeeklySummaryOk returns a tuple with the EmailWeeklySummary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *User) GetEmailWeeklySummaryOk() (*bool, bool) {
	if o == nil || isNil(o.EmailWeeklySummary) {
    return nil, false
	}
	return o.EmailWeeklySummary, true
}

// HasEmailWeeklySummary returns a boolean if a field has been set.
func (o *User) HasEmailWeeklySummary() bool {
	if o != nil && !isNil(o.EmailWeeklySummary) {
		return true
	}

	return false
}

// SetEmailWeeklySummary gets a reference to the given bool and assigns it to the EmailWeeklySummary field.
func (o *User) SetEmailWeeklySummary(v bool) {
	o.EmailWeeklySummary = &v
}

// GetExternalProviderRef returns the ExternalProviderRef field value if set, zero value otherwise.
func (o *User) GetExternalProviderRef() string {
	if o == nil || isNil(o.ExternalProviderRef) {
		var ret string
		return ret
	}
	return *o.ExternalProviderRef
}

// GetExternalProviderRefOk returns a tuple with the ExternalProviderRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *User) GetExternalProviderRefOk() (*string, bool) {
	if o == nil || isNil(o.ExternalProviderRef) {
    return nil, false
	}
	return o.ExternalProviderRef, true
}

// HasExternalProviderRef returns a boolean if a field has been set.
func (o *User) HasExternalProviderRef() bool {
	if o != nil && !isNil(o.ExternalProviderRef) {
		return true
	}

	return false
}

// SetExternalProviderRef gets a reference to the given string and assigns it to the ExternalProviderRef field.
func (o *User) SetExternalProviderRef(v string) {
	o.ExternalProviderRef = &v
}

// GetFacebookId returns the FacebookId field value if set, zero value otherwise.
func (o *User) GetFacebookId() string {
	if o == nil || isNil(o.FacebookId) {
		var ret string
		return ret
	}
	return *o.FacebookId
}

// GetFacebookIdOk returns a tuple with the FacebookId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *User) GetFacebookIdOk() (*string, bool) {
	if o == nil || isNil(o.FacebookId) {
    return nil, false
	}
	return o.FacebookId, true
}

// HasFacebookId returns a boolean if a field has been set.
func (o *User) HasFacebookId() bool {
	if o != nil && !isNil(o.FacebookId) {
		return true
	}

	return false
}

// SetFacebookId gets a reference to the given string and assigns it to the FacebookId field.
func (o *User) SetFacebookId(v string) {
	o.FacebookId = &v
}

// GetFirstLoggedInTimestamp returns the FirstLoggedInTimestamp field value if set, zero value otherwise.
func (o *User) GetFirstLoggedInTimestamp() int64 {
	if o == nil || isNil(o.FirstLoggedInTimestamp) {
		var ret int64
		return ret
	}
	return *o.FirstLoggedInTimestamp
}

// GetFirstLoggedInTimestampOk returns a tuple with the FirstLoggedInTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *User) GetFirstLoggedInTimestampOk() (*int64, bool) {
	if o == nil || isNil(o.FirstLoggedInTimestamp) {
    return nil, false
	}
	return o.FirstLoggedInTimestamp, true
}

// HasFirstLoggedInTimestamp returns a boolean if a field has been set.
func (o *User) HasFirstLoggedInTimestamp() bool {
	if o != nil && !isNil(o.FirstLoggedInTimestamp) {
		return true
	}

	return false
}

// SetFirstLoggedInTimestamp gets a reference to the given int64 and assigns it to the FirstLoggedInTimestamp field.
func (o *User) SetFirstLoggedInTimestamp(v int64) {
	o.FirstLoggedInTimestamp = &v
}

// GetFirstName returns the FirstName field value if set, zero value otherwise.
func (o *User) GetFirstName() string {
	if o == nil || isNil(o.FirstName) {
		var ret string
		return ret
	}
	return *o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *User) GetFirstNameOk() (*string, bool) {
	if o == nil || isNil(o.FirstName) {
    return nil, false
	}
	return o.FirstName, true
}

// HasFirstName returns a boolean if a field has been set.
func (o *User) HasFirstName() bool {
	if o != nil && !isNil(o.FirstName) {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given string and assigns it to the FirstName field.
func (o *User) SetFirstName(v string) {
	o.FirstName = &v
}

// GetFullName returns the FullName field value if set, zero value otherwise.
func (o *User) GetFullName() string {
	if o == nil || isNil(o.FullName) {
		var ret string
		return ret
	}
	return *o.FullName
}

// GetFullNameOk returns a tuple with the FullName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *User) GetFullNameOk() (*string, bool) {
	if o == nil || isNil(o.FullName) {
    return nil, false
	}
	return o.FullName, true
}

// HasFullName returns a boolean if a field has been set.
func (o *User) HasFullName() bool {
	if o != nil && !isNil(o.FullName) {
		return true
	}

	return false
}

// SetFullName gets a reference to the given string and assigns it to the FullName field.
func (o *User) SetFullName(v string) {
	o.FullName = &v
}

// GetHasMemoriesAccess returns the HasMemoriesAccess field value if set, zero value otherwise.
func (o *User) GetHasMemoriesAccess() bool {
	if o == nil || isNil(o.HasMemoriesAccess) {
		var ret bool
		return ret
	}
	return *o.HasMemoriesAccess
}

// GetHasMemoriesAccessOk returns a tuple with the HasMemoriesAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *User) GetHasMemoriesAccessOk() (*bool, bool) {
	if o == nil || isNil(o.HasMemoriesAccess) {
    return nil, false
	}
	return o.HasMemoriesAccess, true
}

// HasHasMemoriesAccess returns a boolean if a field has been set.
func (o *User) HasHasMemoriesAccess() bool {
	if o != nil && !isNil(o.HasMemoriesAccess) {
		return true
	}

	return false
}

// SetHasMemoriesAccess gets a reference to the given bool and assigns it to the HasMemoriesAccess field.
func (o *User) SetHasMemoriesAccess(v bool) {
	o.HasMemoriesAccess = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *User) GetId() int64 {
	if o == nil || isNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *User) GetIdOk() (*int64, bool) {
	if o == nil || isNil(o.Id) {
    return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *User) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *User) SetId(v int64) {
	o.Id = &v
}

// GetInstagramId returns the InstagramId field value if set, zero value otherwise.
func (o *User) GetInstagramId() string {
	if o == nil || isNil(o.InstagramId) {
		var ret string
		return ret
	}
	return *o.InstagramId
}

// GetInstagramIdOk returns a tuple with the InstagramId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *User) GetInstagramIdOk() (*string, bool) {
	if o == nil || isNil(o.InstagramId) {
    return nil, false
	}
	return o.InstagramId, true
}

// HasInstagramId returns a boolean if a field has been set.
func (o *User) HasInstagramId() bool {
	if o != nil && !isNil(o.InstagramId) {
		return true
	}

	return false
}

// SetInstagramId gets a reference to the given string and assigns it to the InstagramId field.
func (o *User) SetInstagramId(v string) {
	o.InstagramId = &v
}

// GetInstagramUsername returns the InstagramUsername field value if set, zero value otherwise.
func (o *User) GetInstagramUsername() string {
	if o == nil || isNil(o.InstagramUsername) {
		var ret string
		return ret
	}
	return *o.InstagramUsername
}

// GetInstagramUsernameOk returns a tuple with the InstagramUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *User) GetInstagramUsernameOk() (*string, bool) {
	if o == nil || isNil(o.InstagramUsername) {
    return nil, false
	}
	return o.InstagramUsername, true
}

// HasInstagramUsername returns a boolean if a field has been set.
func (o *User) HasInstagramUsername() bool {
	if o != nil && !isNil(o.InstagramUsername) {
		return true
	}

	return false
}

// SetInstagramUsername gets a reference to the given string and assigns it to the InstagramUsername field.
func (o *User) SetInstagramUsername(v string) {
	o.InstagramUsername = &v
}

// GetLastEmailOpenTimestamp returns the LastEmailOpenTimestamp field value if set, zero value otherwise.
func (o *User) GetLastEmailOpenTimestamp() int64 {
	if o == nil || isNil(o.LastEmailOpenTimestamp) {
		var ret int64
		return ret
	}
	return *o.LastEmailOpenTimestamp
}

// GetLastEmailOpenTimestampOk returns a tuple with the LastEmailOpenTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *User) GetLastEmailOpenTimestampOk() (*int64, bool) {
	if o == nil || isNil(o.LastEmailOpenTimestamp) {
    return nil, false
	}
	return o.LastEmailOpenTimestamp, true
}

// HasLastEmailOpenTimestamp returns a boolean if a field has been set.
func (o *User) HasLastEmailOpenTimestamp() bool {
	if o != nil && !isNil(o.LastEmailOpenTimestamp) {
		return true
	}

	return false
}

// SetLastEmailOpenTimestamp gets a reference to the given int64 and assigns it to the LastEmailOpenTimestamp field.
func (o *User) SetLastEmailOpenTimestamp(v int64) {
	o.LastEmailOpenTimestamp = &v
}

// GetLastLoggedInTimestamp returns the LastLoggedInTimestamp field value if set, zero value otherwise.
func (o *User) GetLastLoggedInTimestamp() int64 {
	if o == nil || isNil(o.LastLoggedInTimestamp) {
		var ret int64
		return ret
	}
	return *o.LastLoggedInTimestamp
}

// GetLastLoggedInTimestampOk returns a tuple with the LastLoggedInTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *User) GetLastLoggedInTimestampOk() (*int64, bool) {
	if o == nil || isNil(o.LastLoggedInTimestamp) {
    return nil, false
	}
	return o.LastLoggedInTimestamp, true
}

// HasLastLoggedInTimestamp returns a boolean if a field has been set.
func (o *User) HasLastLoggedInTimestamp() bool {
	if o != nil && !isNil(o.LastLoggedInTimestamp) {
		return true
	}

	return false
}

// SetLastLoggedInTimestamp gets a reference to the given int64 and assigns it to the LastLoggedInTimestamp field.
func (o *User) SetLastLoggedInTimestamp(v int64) {
	o.LastLoggedInTimestamp = &v
}

// GetLastName returns the LastName field value if set, zero value otherwise.
func (o *User) GetLastName() string {
	if o == nil || isNil(o.LastName) {
		var ret string
		return ret
	}
	return *o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *User) GetLastNameOk() (*string, bool) {
	if o == nil || isNil(o.LastName) {
    return nil, false
	}
	return o.LastName, true
}

// HasLastName returns a boolean if a field has been set.
func (o *User) HasLastName() bool {
	if o != nil && !isNil(o.LastName) {
		return true
	}

	return false
}

// SetLastName gets a reference to the given string and assigns it to the LastName field.
func (o *User) SetLastName(v string) {
	o.LastName = &v
}

// GetLastUpdatedTimestamp returns the LastUpdatedTimestamp field value if set, zero value otherwise.
func (o *User) GetLastUpdatedTimestamp() int64 {
	if o == nil || isNil(o.LastUpdatedTimestamp) {
		var ret int64
		return ret
	}
	return *o.LastUpdatedTimestamp
}

// GetLastUpdatedTimestampOk returns a tuple with the LastUpdatedTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *User) GetLastUpdatedTimestampOk() (*int64, bool) {
	if o == nil || isNil(o.LastUpdatedTimestamp) {
    return nil, false
	}
	return o.LastUpdatedTimestamp, true
}

// HasLastUpdatedTimestamp returns a boolean if a field has been set.
func (o *User) HasLastUpdatedTimestamp() bool {
	if o != nil && !isNil(o.LastUpdatedTimestamp) {
		return true
	}

	return false
}

// SetLastUpdatedTimestamp gets a reference to the given int64 and assigns it to the LastUpdatedTimestamp field.
func (o *User) SetLastUpdatedTimestamp(v int64) {
	o.LastUpdatedTimestamp = &v
}

// GetMeasurementSystem returns the MeasurementSystem field value if set, zero value otherwise.
func (o *User) GetMeasurementSystem() MeasurementSystem {
	if o == nil || isNil(o.MeasurementSystem) {
		var ret MeasurementSystem
		return ret
	}
	return *o.MeasurementSystem
}

// GetMeasurementSystemOk returns a tuple with the MeasurementSystem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *User) GetMeasurementSystemOk() (*MeasurementSystem, bool) {
	if o == nil || isNil(o.MeasurementSystem) {
    return nil, false
	}
	return o.MeasurementSystem, true
}

// HasMeasurementSystem returns a boolean if a field has been set.
func (o *User) HasMeasurementSystem() bool {
	if o != nil && !isNil(o.MeasurementSystem) {
		return true
	}

	return false
}

// SetMeasurementSystem gets a reference to the given MeasurementSystem and assigns it to the MeasurementSystem field.
func (o *User) SetMeasurementSystem(v MeasurementSystem) {
	o.MeasurementSystem = &v
}

// GetPublicUsername returns the PublicUsername field value if set, zero value otherwise.
func (o *User) GetPublicUsername() string {
	if o == nil || isNil(o.PublicUsername) {
		var ret string
		return ret
	}
	return *o.PublicUsername
}

// GetPublicUsernameOk returns a tuple with the PublicUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *User) GetPublicUsernameOk() (*string, bool) {
	if o == nil || isNil(o.PublicUsername) {
    return nil, false
	}
	return o.PublicUsername, true
}

// HasPublicUsername returns a boolean if a field has been set.
func (o *User) HasPublicUsername() bool {
	if o != nil && !isNil(o.PublicUsername) {
		return true
	}

	return false
}

// SetPublicUsername gets a reference to the given string and assigns it to the PublicUsername field.
func (o *User) SetPublicUsername(v string) {
	o.PublicUsername = &v
}

// GetReferralCode returns the ReferralCode field value if set, zero value otherwise.
func (o *User) GetReferralCode() string {
	if o == nil || isNil(o.ReferralCode) {
		var ret string
		return ret
	}
	return *o.ReferralCode
}

// GetReferralCodeOk returns a tuple with the ReferralCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *User) GetReferralCodeOk() (*string, bool) {
	if o == nil || isNil(o.ReferralCode) {
    return nil, false
	}
	return o.ReferralCode, true
}

// HasReferralCode returns a boolean if a field has been set.
func (o *User) HasReferralCode() bool {
	if o != nil && !isNil(o.ReferralCode) {
		return true
	}

	return false
}

// SetReferralCode gets a reference to the given string and assigns it to the ReferralCode field.
func (o *User) SetReferralCode(v string) {
	o.ReferralCode = &v
}

// GetReferralUrl returns the ReferralUrl field value if set, zero value otherwise.
func (o *User) GetReferralUrl() string {
	if o == nil || isNil(o.ReferralUrl) {
		var ret string
		return ret
	}
	return *o.ReferralUrl
}

// GetReferralUrlOk returns a tuple with the ReferralUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *User) GetReferralUrlOk() (*string, bool) {
	if o == nil || isNil(o.ReferralUrl) {
    return nil, false
	}
	return o.ReferralUrl, true
}

// HasReferralUrl returns a boolean if a field has been set.
func (o *User) HasReferralUrl() bool {
	if o != nil && !isNil(o.ReferralUrl) {
		return true
	}

	return false
}

// SetReferralUrl gets a reference to the given string and assigns it to the ReferralUrl field.
func (o *User) SetReferralUrl(v string) {
	o.ReferralUrl = &v
}

// GetTimeZone returns the TimeZone field value if set, zero value otherwise.
func (o *User) GetTimeZone() TimeZone {
	if o == nil || isNil(o.TimeZone) {
		var ret TimeZone
		return ret
	}
	return *o.TimeZone
}

// GetTimeZoneOk returns a tuple with the TimeZone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *User) GetTimeZoneOk() (*TimeZone, bool) {
	if o == nil || isNil(o.TimeZone) {
    return nil, false
	}
	return o.TimeZone, true
}

// HasTimeZone returns a boolean if a field has been set.
func (o *User) HasTimeZone() bool {
	if o != nil && !isNil(o.TimeZone) {
		return true
	}

	return false
}

// SetTimeZone gets a reference to the given TimeZone and assigns it to the TimeZone field.
func (o *User) SetTimeZone(v TimeZone) {
	o.TimeZone = &v
}

// GetTimeZoneOffset returns the TimeZoneOffset field value if set, zero value otherwise.
func (o *User) GetTimeZoneOffset() int64 {
	if o == nil || isNil(o.TimeZoneOffset) {
		var ret int64
		return ret
	}
	return *o.TimeZoneOffset
}

// GetTimeZoneOffsetOk returns a tuple with the TimeZoneOffset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *User) GetTimeZoneOffsetOk() (*int64, bool) {
	if o == nil || isNil(o.TimeZoneOffset) {
    return nil, false
	}
	return o.TimeZoneOffset, true
}

// HasTimeZoneOffset returns a boolean if a field has been set.
func (o *User) HasTimeZoneOffset() bool {
	if o != nil && !isNil(o.TimeZoneOffset) {
		return true
	}

	return false
}

// SetTimeZoneOffset gets a reference to the given int64 and assigns it to the TimeZoneOffset field.
func (o *User) SetTimeZoneOffset(v int64) {
	o.TimeZoneOffset = &v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *User) GetTimestamp() int64 {
	if o == nil || isNil(o.Timestamp) {
		var ret int64
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *User) GetTimestampOk() (*int64, bool) {
	if o == nil || isNil(o.Timestamp) {
    return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *User) HasTimestamp() bool {
	if o != nil && !isNil(o.Timestamp) {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given int64 and assigns it to the Timestamp field.
func (o *User) SetTimestamp(v int64) {
	o.Timestamp = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *User) GetUsername() string {
	if o == nil || isNil(o.Username) {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *User) GetUsernameOk() (*string, bool) {
	if o == nil || isNil(o.Username) {
    return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *User) HasUsername() bool {
	if o != nil && !isNil(o.Username) {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *User) SetUsername(v string) {
	o.Username = &v
}

func (o User) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.URL) {
		toSerialize["URL"] = o.URL
	}
	if !isNil(o.Avatars) {
		toSerialize["avatars"] = o.Avatars
	}
	if !isNil(o.DateStyle) {
		toSerialize["dateStyle"] = o.DateStyle
	}
	if !isNil(o.Deleted) {
		toSerialize["deleted"] = o.Deleted
	}
	if !isNil(o.EmailAddress) {
		toSerialize["emailAddress"] = o.EmailAddress
	}
	if !isNil(o.EmailFrequencyOnNewComment) {
		toSerialize["emailFrequencyOnNewComment"] = o.EmailFrequencyOnNewComment
	}
	if !isNil(o.EmailFrequencyOnNewEmotion) {
		toSerialize["emailFrequencyOnNewEmotion"] = o.EmailFrequencyOnNewEmotion
	}
	if !isNil(o.EmailMarketingOptOut) {
		toSerialize["emailMarketingOptOut"] = o.EmailMarketingOptOut
	}
	if !isNil(o.EmailOptOut) {
		toSerialize["emailOptOut"] = o.EmailOptOut
	}
	if !isNil(o.EmailWeeklySummary) {
		toSerialize["emailWeeklySummary"] = o.EmailWeeklySummary
	}
	if !isNil(o.ExternalProviderRef) {
		toSerialize["externalProviderRef"] = o.ExternalProviderRef
	}
	if !isNil(o.FacebookId) {
		toSerialize["facebookId"] = o.FacebookId
	}
	if !isNil(o.FirstLoggedInTimestamp) {
		toSerialize["firstLoggedInTimestamp"] = o.FirstLoggedInTimestamp
	}
	if !isNil(o.FirstName) {
		toSerialize["firstName"] = o.FirstName
	}
	if !isNil(o.FullName) {
		toSerialize["fullName"] = o.FullName
	}
	if !isNil(o.HasMemoriesAccess) {
		toSerialize["hasMemoriesAccess"] = o.HasMemoriesAccess
	}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.InstagramId) {
		toSerialize["instagramId"] = o.InstagramId
	}
	if !isNil(o.InstagramUsername) {
		toSerialize["instagramUsername"] = o.InstagramUsername
	}
	if !isNil(o.LastEmailOpenTimestamp) {
		toSerialize["lastEmailOpenTimestamp"] = o.LastEmailOpenTimestamp
	}
	if !isNil(o.LastLoggedInTimestamp) {
		toSerialize["lastLoggedInTimestamp"] = o.LastLoggedInTimestamp
	}
	if !isNil(o.LastName) {
		toSerialize["lastName"] = o.LastName
	}
	if !isNil(o.LastUpdatedTimestamp) {
		toSerialize["lastUpdatedTimestamp"] = o.LastUpdatedTimestamp
	}
	if !isNil(o.MeasurementSystem) {
		toSerialize["measurementSystem"] = o.MeasurementSystem
	}
	if !isNil(o.PublicUsername) {
		toSerialize["publicUsername"] = o.PublicUsername
	}
	if !isNil(o.ReferralCode) {
		toSerialize["referralCode"] = o.ReferralCode
	}
	if !isNil(o.ReferralUrl) {
		toSerialize["referralUrl"] = o.ReferralUrl
	}
	if !isNil(o.TimeZone) {
		toSerialize["timeZone"] = o.TimeZone
	}
	if !isNil(o.TimeZoneOffset) {
		toSerialize["timeZoneOffset"] = o.TimeZoneOffset
	}
	if !isNil(o.Timestamp) {
		toSerialize["timestamp"] = o.Timestamp
	}
	if !isNil(o.Username) {
		toSerialize["username"] = o.Username
	}
	return json.Marshal(toSerialize)
}

type NullableUser struct {
	value *User
	isSet bool
}

func (v NullableUser) Get() *User {
	return v.value
}

func (v *NullableUser) Set(val *User) {
	v.value = val
	v.isSet = true
}

func (v NullableUser) IsSet() bool {
	return v.isSet
}

func (v *NullableUser) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUser(val *User) *NullableUser {
	return &NullableUser{value: val, isSet: true}
}

func (v NullableUser) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUser) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


